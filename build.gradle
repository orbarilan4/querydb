/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Scala library project to get you started.
 * For more details take a look at the Scala plugin chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/scala_plugin.html
 */
plugins {
    id 'scala'
    id 'idea'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'application'
    id 'java'
}

mainClassName = 'querydb.Main'

def versions = [
        akka: "2.6.8",
        akkaHttp: "10.2.4",
        openCSV: "4.4",
        mySQLConnectorJava: "5.1.44",
        logBack: "1.2.3",
        junit: "4.12",
        scalaBinary: "2.13",
        scalaTest: "3.0.5",
        scalaTestPlus: "3.1.0.0"
]

repositories {
    jcenter()
}

dependencies {
    implementation "org.scala-lang:scala-library:${versions.scalaBinary}.1"
    implementation "com.typesafe.akka:akka-http-bom_${versions.scalaBinary}:${versions.akkaHttp}"
    implementation "com.typesafe.akka:akka-http-testkit_${versions.scalaBinary}:${versions.akkaHttp}"
    implementation "com.typesafe.akka:akka-http-spray-json_${versions.scalaBinary}:${versions.akkaHttp}"
    implementation "com.typesafe.akka:akka-actor-typed_${versions.scalaBinary}:${versions.akka}"
    implementation "com.typesafe.akka:akka-stream_${versions.scalaBinary}:${versions.akka}"
    implementation "ch.qos.logback:logback-classic:${versions.logBack}"
    implementation "mysql:mysql-connector-java:${versions.mySQLConnectorJava}"
    implementation "com.opencsv:opencsv:${versions.openCSV}"

    // Use those for testing our app
    testImplementation "junit:junit:${versions.junit}"
    testImplementation "org.scalatest:scalatest_${versions.scalaBinary}:${versions.scalaTest}"
    testImplementation "org.scalatestplus:junit-4-12_${versions.scalaBinary}:${versions.scalaTestPlus}"
    testImplementation "com.h2database:h2:1.4.197"
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

shadowJar {
    append('reference.conf')
}

task testJar(type: ShadowJar) {
    classifier = 'tests'
    from sourceSets.test.output
    configurations = [project.configurations.testRuntime]
}

